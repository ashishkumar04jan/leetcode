https://leetcode.com/problems/unique-email-addresses/


Every valid email consists of a local name and a domain name, separated by the '@' sign. Besides lowercase letters, the email may contain one or more '.' or '+'.

For example, in "alice@leetcode.com", "alice" is the local name, and "leetcode.com" is the domain name.
If you add periods '.' between some characters in the local name part of an email address, mail sent there will be forwarded to the same address without dots in the local name. Note that this rule does not apply to domain names.

For example, "alice.z@leetcode.com" and "alicez@leetcode.com" forward to the same email address.
If you add a plus '+' in the local name, everything after the first plus sign will be ignored. This allows certain emails to be filtered. Note that this rule does not apply to domain names.

For example, "m.y+name@email.com" will be forwarded to "my@email.com".
It is possible to use both of these rules at the same time.

Given an array of strings emails where we send one email to each emails[i], return the number of different addresses that actually receive mails.

Example 1:

Input: emails = ["test.email+alex@leetcode.com","test.e.mail+bob.cathy@leetcode.com","testemail+david@lee.tcode.com"]
Output: 2
Explanation: "testemail@leetcode.com" and "testemail@lee.tcode.com" actually receive mails.
Example 2:

Input: emails = ["a@leetcode.com","b@leetcode.com","c@leetcode.com"]
Output: 3

Approach : Question is having two part. First we need to find unique email address ,Second part is to shorten string whne the email address contains if "+" is occurred
and we need to replace all "." as well from email string
So i used basic approach to divide email to two parts before @ and after that
In first part replaced all . and shorten the string if we got + symbol 

and the combine first and second part and add to the HashSet so that unique email will store.

class Solution {
    public int numUniqueEmails(String[] emails) {
       HashSet<String> hashSet = new HashSet<>();

		for (String s : emails) {

			String firstHalf = s.substring(0, s.indexOf('@'));
			String secondHalf = s.substring(s.indexOf('@'), s.length());

			firstHalf = firstHalf.replace(".", "");

			int indexOfPlus = firstHalf.indexOf('+');

			if (indexOfPlus > -1) {
				firstHalf = firstHalf.substring(0, indexOfPlus);
			}

			String s1 = firstHalf + secondHalf;

			hashSet.add(s1);
		}

		return hashSet.size();
    }
}